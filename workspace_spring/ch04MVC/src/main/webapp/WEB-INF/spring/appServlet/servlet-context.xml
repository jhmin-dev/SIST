<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="1"/> <!-- View Resolver가 2개이므로 충돌하지 않도록 우선순위를 서로 다르게 지정 -->
	</beans:bean>
	
	<!-- @Autowired 사용을 위해서  -->
	<context:annotation-config/>
	
	<!-- MVC 기본 설정 -->
	<beans:bean id="helloController" class="kr.spring.ch01.controller.HelloController"/>
	
	<!-- 파라미터(=GET 방식)로 전송된 데이터 처리 -->
	<beans:bean id="searchController" class="kr.spring.ch02.controller.SearchController"/>
	
	<!-- POST 방식으로 전송된 데이터 처리 -->
	<beans:bean id="newArticleController" class="kr.spring.ch03.controller.NewArticleController"/>
	<beans:bean id="articleService" class="kr.spring.ch03.service.ArticleService"/>
	
	<!-- @CookieValue 어노테이션을 이용한 쿠키 매핑 -->
	<beans:bean id="cookieController" class="kr.spring.ch04.controller.CookieController"/>
	
	<!-- 폼에서 전송받은 데이터 처리 -->
	<beans:bean class="kr.spring.ch05.controller.GameSearchController"/> <!-- 요청 URL에 의해 매핑되므로(@RequestMapping), bean 식별자 불필요 -->
	<beans:bean class="kr.spring.ch05.service.SearchService"/> <!-- 클래스명(=자료형)에 의해 매핑되므로(@Autowired), bean 식별자 불필요 -->
	
	<!-- 리소스 번들 지정 -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basenames">
			<beans:list> <!-- properties 파일을 여러 개 등록 가능 -->
				<beans:value>messages.validation</beans:value> <!-- 리스트의 값들은 전부 properties 파일로 인식하므로 확장자는 생략하며, src/main/resources 하위의 폴더 경로는 포함 -->
				<beans:value>messages.label</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- 유효성 체크 -->
	<beans:bean class="kr.spring.ch06.controller.CreateAccountController"/>
	
	<!-- multipartResolver 설정 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="52428800"/> <!-- 50MB -->
		<beans:property name="defaultEncoding" value="UTF-8"/>
	</beans:bean>
	
	<!-- 업로드 폴더 등록 -->
	<context:property-placeholder location="classpath:config/file.properties"/> <!-- classpath가 src/main/resources를 가리킴 -->
	
	<!-- 파일 업로드 처리 -->
	<beans:bean class="kr.spring.ch07.controller.SubmitReportController"/>
	
	<!-- 로그인 처리 -->
	<beans:bean class="kr.spring.ch08.controller.LoginController"/>
	<beans:bean class="kr.spring.ch08.service.LoginService"/>
	
	<!-- localeResolver 지정 -->
	<beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"/>
	
	<!-- 로케일 변경하기 -->
	<beans:bean class="kr.spring.ch09.controller.LocaleChangeController"/>
	
	<!-- localChangeInterceptor를 이용한 로케일 처리 -->
	<beans:bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" p:paramName="language"/>
	<interceptors>
		<interceptor>
			<mapping path="/login/login.do"/>
			<beans:ref bean="localeChangeInterceptor"/>
		</interceptor>
	</interceptors>
	
	<!-- view의 이름과 bean의 이름이 같으면 해당 bean을 view로 호출 -->
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0"/>
	
	<!-- 파일 다운로드 -->
	<beans:bean class="kr.spring.ch10.controller.DownloadController"/>
	<beans:bean id="download" class="kr.spring.ch10.view.DownloadView"/>
	
	<!-- 어노테이션을 이용한 유효성 검증 -->
	<beans:bean class="kr.spring.ch11.controller.MemberWriteController"/>
	
	<!-- JSON 파싱 -->
	<beans:bean class="kr.spring.ch12.controller.PageReportController"/>
	
	<!-- @RestController 사용 -->
	<beans:bean class="kr.spring.ch13.controller.RestMainController"/>
</beans:beans>
